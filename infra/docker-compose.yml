version: '3.8'

services:

  db:
    image: postgres:14.0-alpine
    volumes:
      - network_database:/var/lib/postgresql/data/
    env_file:
      - ../.env

  app:
    # build:
    #   context: ../
    #   dockerfile: Dockerfile
    image: avnosov/smsuser:v1
    command: >
      sh -c "
        poetry run python manage.py collectstatic --no-input &&
        poetry run python manage.py migrate &&
        poetry run gunicorn backend.wsgi --bind 0:8888
      "
    volumes:
      - static_volume:/app/static/
    depends_on:
      - db
    env_file:
    - ../.env

  adminer:
    image: adminer:4.8.1-standalone
    restart: always
    depends_on:
      - db
      - app

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/html/static/
    depends_on:
      - app
      - adminer

  redis:
    image: redis:6.2.13-alpine
    depends_on:
      - app

  celery:
    # build:
    #   context: ../
    #   dockerfile: Dockerfile
    image: avnosov/smsuser:v1
    command: poetry run celery -A backend worker --loglevel=info
    depends_on:
      - app
      - redis
    env_file:
      - ../.env

  flower:
    # build:
    #   context: ../
    #   dockerfile: Dockerfile
    image: avnosov/smsuser:v1
    command: poetry run celery -A backend flower
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    env_file:
    - ../.env

volumes:
  static_volume:
  network_database:
